name: C++ CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    strategy:
      matrix:
        os: [windows-latest, macos-latest]
        config: [Release, Debug]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: 'recursive'

      - name: Install CMake on macOS
        if: startsWith(matrix.os, 'macos')
        run: brew install cmake

      - name: Install CMake on Windows
        if: startsWith(matrix.os, 'windows')
        run: choco install cmake --installargs 'ADD_CMAKE_TO_PATH=System' -y

      - name: Configure CMake
        run: cmake -S . -B build

      - name: Build
        run: cmake --build build --config ${{ matrix.config }}

      - name: Run Tests
        run: |
          if [ "${{ matrix.os }}" == "windows-latest" ]; then
            build/${{ matrix.config }}/heliostat_tracking_tests.exe
          else
            build/${{ matrix.config }}/heliostat_tracking_tests
        shell: bash
name: C++ CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    strategy:
      matrix:
        os: [windows-latest, macos-latest]
        config: [Release, Debug]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: 'recursive'

      - name: Install CMake on macOS
        if: startsWith(matrix.os, 'macos')
        run: brew install cmake

      - name: Install CMake on Windows
        if: startsWith(matrix.os, 'windows')
        run: choco install cmake --installargs 'ADD_CMAKE_TO_PATH=System' -y

      - name: Configure CMake
        run: cmake -S . -B build

      - name: Build
        run: cmake --build build --config ${{ matrix.config }}

      - name: Run Tests
        run: |
          if [ "${{ matrix.os }}" == "windows-latest" ]; then
            build/${{ matrix.config }}/heliostat_tracking_tests.exe
          else
            build/${{ matrix.config }}/heliostat_tracking_tests
        shell: bash
